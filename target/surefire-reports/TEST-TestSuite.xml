<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="74" failures="0" name="TestSuite" time="0.094" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="11.0.2+9"/>
    <property name="sun.boot.library.path" value="/home/bartosz/.sdkman/candidates/java/11.0.2-open/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/bartosz/Kod/OX"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/bartosz/Kod/OX"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="11.0.2+9"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/home/bartosz/.sdkman/candidates/maven/current/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="maven.conf" value="/home/bartosz/.sdkman/candidates/maven/current/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="55.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.18.0-16-generic"/>
    <property name="library.jansi.path" value="/home/bartosz/.sdkman/candidates/maven/current/lib/jansi-native"/>
    <property name="user.home" value="/home/bartosz"/>
    <property name="user.timezone" value="Europe/Warsaw"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="11"/>
    <property name="user.name" value="bartosz"/>
    <property name="java.class.path" value="/home/bartosz/.sdkman/candidates/maven/current/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.home" value="/home/bartosz/.sdkman/candidates/java/11.0.2-open"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="11.0.2"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/home/bartosz/.sdkman/candidates/maven/current"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2019-01-15"/>
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="18.9"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="com.OX.app.LanguageTest" name="testLanguageChange" time="0.008"/>
  <testcase classname="com.OX.app.LanguageTest" name="testLanguageChangeTwice" time="0"/>
  <testcase classname="com.OX.app.GameCompetitorsTest" name="testConstructorWithList" time="0.001"/>
  <testcase classname="com.OX.app.GameCompetitorsTest" name="testDefaultConstructor" time="0"/>
  <testcase classname="com.OX.app.GameCompetitorsTest" name="testNoSuchAPlayerException" time="0"/>
  <testcase classname="com.OX.app.GameCompetitorsTest" name="testTooManyPlayersException" time="0"/>
  <testcase classname="com.OX.app.GameTest" name="endToEndTestTie" time="0.032"/>
  <testcase classname="com.OX.app.GameTest" name="endToEndTestWinDiagonal" time="0.009"/>
  <testcase classname="com.OX.app.GameTest" name="endToEndTestWinHorizontal" time="0.01"/>
  <testcase classname="com.OX.app.GameTest" name="endToEndTestWinReverseDiagonal" time="0.009"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsNotWorkingHorizontalInBestScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsNotWorkingHorizontalInBestScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" time="0.001"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingVerticalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingVerticalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingVerticalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingVerticalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testIfWinningCheckerIsWorkingVerticalInBothWays" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testWinningDiagonalScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testWinningDiagonalScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testWinningDiagonalScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testWinningDiagonalScenario" time="0"/>
  <testcase classname="com.OX.app.WinningTest" name="testWinningReverseDiagonalScenario" time="0"/>
  <testcase classname="com.OX.app.PlayerTest" name="createPlayerTest" time="0"/>
  <testcase classname="com.OX.app.PlayerTest" name="testCheckingTheCorrectnessOfPlayerSignsX" time="0"/>
  <testcase classname="com.OX.app.GameRulesTest" name="testCreationGameRulesTest" time="0"/>
  <testcase classname="com.OX.app.GameRulesTest" name="testNormalInLineToWinCondition" time="0"/>
  <testcase classname="com.OX.app.GameRulesTest" name="testToSmallSizeOfABoardException" time="0.001"/>
  <testcase classname="com.OX.app.GameRulesTest" name="testToSmallWinnindContionsException" time="0"/>
  <testcase classname="com.OX.app.GameRulesTest" name="testWinningInLineBiggerThanSizeOfABoard" time="0"/>
  <testcase classname="com.OX.app.SignTest" name="testSignEquality" time="0"/>
  <testcase classname="com.OX.app.SignTest" name="testSignNoEquality" time="0"/>
  <testcase classname="com.OX.app.CoordinatesTest" name="createCoordinates" time="0"/>
  <testcase classname="com.OX.app.TieTest" name="testIfItIsATie" time="0"/>
  <testcase classname="com.OX.app.TieTest" name="testIfItIsNotATie" time="0"/>
  <testcase classname="com.OX.app.BoardTest" name="testOfBoardCreation" time="0"/>
  <testcase classname="com.OX.app.BoardTest" name="testOfCreationTheBoardByBoardCreator" time="0.001"/>
  <testcase classname="com.OX.app.BoardTest" name="testOfCreationTheBoardByBoardCreator" time="0"/>
  <testcase classname="com.OX.app.BoardTest" name="testOfCreationTheBoardByBoardCreator" time="0"/>
  <testcase classname="com.OX.app.BoardTest" name="testOfCreationTheBoardByBoardCreator" time="0"/>
  <testcase classname="com.OX.app.BoardTest" name="testOfCreationTheBoardByBoardCreator" time="0"/>
  <testcase classname="com.OX.app.BoardTest" name="testOfCreationTheBoardByBoardCreator" time="0"/>
  <testcase classname="com.OX.app.BoardTest" name="testOfCreationTheBoardByBoardCreator" time="0"/>
  <testcase classname="com.OX.app.BoardTest" name="testOfCreationTheBoardByBoardCreator" time="0"/>
  <testcase classname="com.OX.app.BoardTest" name="testOfCreationTheBoardByBoardCreator" time="0"/>
  <testcase classname="com.OX.app.BoardTest" name="testPrintBoard" time="0.001"/>
  <testcase classname="com.OX.app.MenuTest" name="firstMenuTest" time="0.02"/>
  <testcase classname="com.OX.app.DisplayBoardTest" name="testPrintBoard" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testArrayOfTheBoundException" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testArrayOfTheBoundException" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testArrayOfTheBoundException" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfICanTakeAMoveWithDifferentSigns" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" time="0.001"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" time="0"/>
  <testcase classname="com.OX.app.MoveTest" name="testIfMoveIsDone" time="0"/>
  <testcase classname="com.OX.app.InputProviderTest" name="testTheNextLine" time="0"/>
</testsuite>