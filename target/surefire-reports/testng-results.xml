<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="74" passed="74" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-03-21T16:55:46Z" name="Command line suite" finished-at="2019-03-21T16:55:46Z" duration-ms="142">
    <groups>
    </groups>
    <test started-at="2019-03-21T16:55:46Z" name="Command line test" finished-at="2019-03-21T16:55:46Z" duration-ms="142">
      <class name="com.OX.app.MenuTest">
        <test-method signature="firstMenuTest()[pri:0, instance:com.OX.app.MenuTest@318ba8c8]" started-at="2019-03-21T16:55:46Z" name="firstMenuTest" finished-at="2019-03-21T16:55:46Z" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstMenuTest -->
      </class> <!-- com.OX.app.MenuTest -->
      <class name="com.OX.app.PlayerTest">
        <test-method signature="testCheckingTheCorrectnessOfPlayerSignsX()[pri:0, instance:com.OX.app.PlayerTest@45b9a632]" started-at="2019-03-21T16:55:46Z" name="testCheckingTheCorrectnessOfPlayerSignsX" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckingTheCorrectnessOfPlayerSignsX -->
        <test-method signature="createPlayerTest()[pri:0, instance:com.OX.app.PlayerTest@45b9a632]" started-at="2019-03-21T16:55:46Z" name="createPlayerTest" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPlayerTest -->
      </class> <!-- com.OX.app.PlayerTest -->
      <class name="com.OX.app.BoardTest">
        <test-method signature="testOfCreationTheBoardByBoardCreator(int, int)[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testOfCreationTheBoardByBoardCreator" data-provider="fillingWithSignCreation" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfCreationTheBoardByBoardCreator -->
        <test-method signature="testOfBoardCreation()[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testOfBoardCreation" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfBoardCreation -->
        <test-method signature="testOfCreationTheBoardByBoardCreator(int, int)[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testOfCreationTheBoardByBoardCreator" data-provider="fillingWithSignCreation" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfCreationTheBoardByBoardCreator -->
        <test-method signature="testOfCreationTheBoardByBoardCreator(int, int)[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testOfCreationTheBoardByBoardCreator" data-provider="fillingWithSignCreation" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfCreationTheBoardByBoardCreator -->
        <test-method signature="testOfCreationTheBoardByBoardCreator(int, int)[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testOfCreationTheBoardByBoardCreator" data-provider="fillingWithSignCreation" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfCreationTheBoardByBoardCreator -->
        <test-method signature="testOfCreationTheBoardByBoardCreator(int, int)[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testOfCreationTheBoardByBoardCreator" data-provider="fillingWithSignCreation" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfCreationTheBoardByBoardCreator -->
        <test-method signature="testOfCreationTheBoardByBoardCreator(int, int)[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testOfCreationTheBoardByBoardCreator" data-provider="fillingWithSignCreation" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfCreationTheBoardByBoardCreator -->
        <test-method signature="testOfCreationTheBoardByBoardCreator(int, int)[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testOfCreationTheBoardByBoardCreator" data-provider="fillingWithSignCreation" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfCreationTheBoardByBoardCreator -->
        <test-method signature="testOfCreationTheBoardByBoardCreator(int, int)[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testOfCreationTheBoardByBoardCreator" data-provider="fillingWithSignCreation" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfCreationTheBoardByBoardCreator -->
        <test-method signature="testOfCreationTheBoardByBoardCreator(int, int)[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testOfCreationTheBoardByBoardCreator" data-provider="fillingWithSignCreation" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfCreationTheBoardByBoardCreator -->
        <test-method signature="testPrintBoard()[pri:0, instance:com.OX.app.BoardTest@54c562f7]" started-at="2019-03-21T16:55:46Z" name="testPrintBoard" finished-at="2019-03-21T16:55:46Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrintBoard -->
      </class> <!-- com.OX.app.BoardTest -->
      <class name="com.OX.app.InputProviderTest">
        <test-method signature="testTheNextLine()[pri:0, instance:com.OX.app.InputProviderTest@43301423]" started-at="2019-03-21T16:55:46Z" name="testTheNextLine" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTheNextLine -->
      </class> <!-- com.OX.app.InputProviderTest -->
      <class name="com.OX.app.GameRulesTest">
        <test-method signature="testCreationGameRulesTest()[pri:0, instance:com.OX.app.GameRulesTest@25d250c6]" started-at="2019-03-21T16:55:46Z" name="testCreationGameRulesTest" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreationGameRulesTest -->
        <test-method signature="testToSmallSizeOfABoardException()[pri:0, instance:com.OX.app.GameRulesTest@25d250c6]" started-at="2019-03-21T16:55:46Z" name="testToSmallSizeOfABoardException" finished-at="2019-03-21T16:55:46Z" duration-ms="1" status="PASS">
          <exception class="com.OX.app.toSmallBoardException">
            <full-stacktrace>
              <![CDATA[com.OX.app.toSmallBoardException
at com.OX.app.GameRules.sizeOfABoard(GameRules.java:33)
at com.OX.app.GameRulesTest.testToSmallSizeOfABoardException(GameRulesTest.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.toSmallBoardException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSmallSizeOfABoardException -->
        <test-method signature="testNormalInLineToWinCondition()[pri:0, instance:com.OX.app.GameRulesTest@25d250c6]" started-at="2019-03-21T16:55:46Z" name="testNormalInLineToWinCondition" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNormalInLineToWinCondition -->
        <test-method signature="testWinningInLineBiggerThanSizeOfABoard()[pri:0, instance:com.OX.app.GameRulesTest@25d250c6]" started-at="2019-03-21T16:55:46Z" name="testWinningInLineBiggerThanSizeOfABoard" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <exception class="com.OX.app.winningConditionMoreThanASizeOfBoardExcetpion">
            <full-stacktrace>
              <![CDATA[com.OX.app.winningConditionMoreThanASizeOfBoardExcetpion
at com.OX.app.GameRules.setInLineToWinCondition(GameRules.java:26)
at com.OX.app.GameRulesTest.testWinningInLineBiggerThanSizeOfABoard(GameRulesTest.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.winningConditionMoreThanASizeOfBoardExcetpion -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWinningInLineBiggerThanSizeOfABoard -->
        <test-method signature="testToSmallWinnindContionsException()[pri:0, instance:com.OX.app.GameRulesTest@25d250c6]" started-at="2019-03-21T16:55:46Z" name="testToSmallWinnindContionsException" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <exception class="com.OX.app.toSmallWinningConditionExceptionException">
            <full-stacktrace>
              <![CDATA[com.OX.app.toSmallWinningConditionExceptionException
at com.OX.app.GameRules.setInLineToWinCondition(GameRules.java:23)
at com.OX.app.GameRulesTest.testToSmallWinnindContionsException(GameRulesTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.toSmallWinningConditionExceptionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSmallWinnindContionsException -->
      </class> <!-- com.OX.app.GameRulesTest -->
      <class name="com.OX.app.DisplayBoardTest">
        <test-method signature="testPrintBoard()[pri:0, instance:com.OX.app.DisplayBoardTest@6dbb137d]" started-at="2019-03-21T16:55:46Z" name="testPrintBoard" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrintBoard -->
      </class> <!-- com.OX.app.DisplayBoardTest -->
      <class name="com.OX.app.CoordinatesTest">
        <test-method signature="createCoordinates()[pri:0, instance:com.OX.app.CoordinatesTest@6b26e945]" started-at="2019-03-21T16:55:46Z" name="createCoordinates" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCoordinates -->
      </class> <!-- com.OX.app.CoordinatesTest -->
      <class name="com.OX.app.WinningTest">
        <test-method signature="testIfWinningCheckerIsNotWorkingHorizontalInBestScenario(int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsNotWorkingHorizontalInBestScenario" data-provider="notWinningHorizontalConditionCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsNotWorkingHorizontalInBestScenario -->
        <test-method signature="testIfWinningCheckerIsNotWorkingHorizontalInBestScenario(int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsNotWorkingHorizontalInBestScenario" data-provider="notWinningHorizontalConditionCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsNotWorkingHorizontalInBestScenario -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBestScenario(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" data-provider="winningHorizontalConditionCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBestScenario -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBestScenario(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" data-provider="winningHorizontalConditionCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBestScenario -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBestScenario(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" data-provider="winningHorizontalConditionCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBestScenario -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBestScenario(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" data-provider="winningHorizontalConditionCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBestScenario -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBestScenario(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" data-provider="winningHorizontalConditionCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBestScenario -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBestScenario(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBestScenario" data-provider="winningHorizontalConditionCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBestScenario -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" data-provider="winningHorizontalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBothWays -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" data-provider="winningHorizontalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBothWays -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" data-provider="winningHorizontalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBothWays -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" data-provider="winningHorizontalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBothWays -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" data-provider="winningHorizontalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBothWays -->
        <test-method signature="testIfWinningCheckerIsWorkingHorizontalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingHorizontalInBothWays" data-provider="winningHorizontalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[O]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingHorizontalInBothWays -->
        <test-method signature="testIfWinningCheckerIsWorkingVerticalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingVerticalInBothWays" data-provider="winningVerticalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingVerticalInBothWays -->
        <test-method signature="testIfWinningCheckerIsWorkingVerticalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingVerticalInBothWays" data-provider="winningVerticalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingVerticalInBothWays -->
        <test-method signature="testIfWinningCheckerIsWorkingVerticalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingVerticalInBothWays" data-provider="winningVerticalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingVerticalInBothWays -->
        <test-method signature="testIfWinningCheckerIsWorkingVerticalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingVerticalInBothWays" data-provider="winningVerticalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingVerticalInBothWays -->
        <test-method signature="testIfWinningCheckerIsWorkingVerticalInBothWays(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testIfWinningCheckerIsWorkingVerticalInBothWays" data-provider="winningVerticalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfWinningCheckerIsWorkingVerticalInBothWays -->
        <test-method signature="testWinningDiagonalScenario(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testWinningDiagonalScenario" data-provider="winningDiagonalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWinningDiagonalScenario -->
        <test-method signature="testWinningDiagonalScenario(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testWinningDiagonalScenario" data-provider="winningDiagonalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWinningDiagonalScenario -->
        <test-method signature="testWinningDiagonalScenario(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testWinningDiagonalScenario" data-provider="winningDiagonalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWinningDiagonalScenario -->
        <test-method signature="testWinningDiagonalScenario(int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testWinningDiagonalScenario" data-provider="winningDiagonalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWinningDiagonalScenario -->
        <test-method signature="testWinningReverseDiagonalScenario(int, int, int, int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.WinningTest@4445629]" started-at="2019-03-21T16:55:46Z" name="testWinningReverseDiagonalScenario" data-provider="winningReverseDiagonalConditionInBothLinesCreated" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[X]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWinningReverseDiagonalScenario -->
      </class> <!-- com.OX.app.WinningTest -->
      <class name="com.OX.app.MoveTest">
        <test-method signature="testArrayOfTheBoundException()[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testArrayOfTheBoundException" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <exception class="com.OX.app.FieldAlreadyTakenException">
            <full-stacktrace>
              <![CDATA[com.OX.app.FieldAlreadyTakenException
at com.OX.app.Move.makeAMove(Move.java:18)
at com.OX.app.MoveTest.testArrayOfTheBoundException(MoveTest.java:107)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.FieldAlreadyTakenException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayOfTheBoundException -->
        <test-method signature="testArrayOfTheBoundException(int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testArrayOfTheBoundException" data-provider="arrayOfBoundExceptionChecker" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[O]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[Index 8 out of bounds for length 5]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: Index 8 out of bounds for length 5
at com.OX.app.Move.makeAMove(Move.java:17)
at com.OX.app.MoveTest.testArrayOfTheBoundException(MoveTest.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayOfTheBoundException -->
        <test-method signature="testArrayOfTheBoundException(int, int, com.OX.app.Sign)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testArrayOfTheBoundException" data-provider="arrayOfBoundExceptionChecker" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[O]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[Index 2147483647 out of bounds for length 5]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: Index 2147483647 out of bounds for length 5
at com.OX.app.Move.makeAMove(Move.java:17)
at com.OX.app.MoveTest.testArrayOfTheBoundException(MoveTest.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayOfTheBoundException -->
        <test-method signature="testIfICanTakeAMoveWithDifferentSigns()[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfICanTakeAMoveWithDifferentSigns" finished-at="2019-03-21T16:55:46Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfICanTakeAMoveWithDifferentSigns -->
        <test-method signature="testIfMoveCantBeDoneIfFieldIsAlreadyWritten(int, int)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" data-provider="coordinatesToTestAlreadyTakenField" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="com.OX.app.FieldAlreadyTakenException">
            <full-stacktrace>
              <![CDATA[com.OX.app.FieldAlreadyTakenException
at com.OX.app.Move.makeAMove(Move.java:18)
at com.OX.app.MoveTest.testIfMoveCantBeDoneIfFieldIsAlreadyWritten(MoveTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.FieldAlreadyTakenException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMoveCantBeDoneIfFieldIsAlreadyWritten -->
        <test-method signature="testIfMoveCantBeDoneIfFieldIsAlreadyWritten(int, int)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" data-provider="coordinatesToTestAlreadyTakenField" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="com.OX.app.FieldAlreadyTakenException">
            <full-stacktrace>
              <![CDATA[com.OX.app.FieldAlreadyTakenException
at com.OX.app.Move.makeAMove(Move.java:18)
at com.OX.app.MoveTest.testIfMoveCantBeDoneIfFieldIsAlreadyWritten(MoveTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.FieldAlreadyTakenException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMoveCantBeDoneIfFieldIsAlreadyWritten -->
        <test-method signature="testIfMoveCantBeDoneIfFieldIsAlreadyWritten(int, int)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" data-provider="coordinatesToTestAlreadyTakenField" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="com.OX.app.FieldAlreadyTakenException">
            <full-stacktrace>
              <![CDATA[com.OX.app.FieldAlreadyTakenException
at com.OX.app.Move.makeAMove(Move.java:18)
at com.OX.app.MoveTest.testIfMoveCantBeDoneIfFieldIsAlreadyWritten(MoveTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.FieldAlreadyTakenException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMoveCantBeDoneIfFieldIsAlreadyWritten -->
        <test-method signature="testIfMoveCantBeDoneIfFieldIsAlreadyWritten(int, int)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" data-provider="coordinatesToTestAlreadyTakenField" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="com.OX.app.FieldAlreadyTakenException">
            <full-stacktrace>
              <![CDATA[com.OX.app.FieldAlreadyTakenException
at com.OX.app.Move.makeAMove(Move.java:18)
at com.OX.app.MoveTest.testIfMoveCantBeDoneIfFieldIsAlreadyWritten(MoveTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.FieldAlreadyTakenException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMoveCantBeDoneIfFieldIsAlreadyWritten -->
        <test-method signature="testIfMoveCantBeDoneIfFieldIsAlreadyWritten(int, int)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" data-provider="coordinatesToTestAlreadyTakenField" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="com.OX.app.FieldAlreadyTakenException">
            <full-stacktrace>
              <![CDATA[com.OX.app.FieldAlreadyTakenException
at com.OX.app.Move.makeAMove(Move.java:18)
at com.OX.app.MoveTest.testIfMoveCantBeDoneIfFieldIsAlreadyWritten(MoveTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.FieldAlreadyTakenException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMoveCantBeDoneIfFieldIsAlreadyWritten -->
        <test-method signature="testIfMoveCantBeDoneIfFieldIsAlreadyWritten(int, int)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" data-provider="coordinatesToTestAlreadyTakenField" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="com.OX.app.FieldAlreadyTakenException">
            <full-stacktrace>
              <![CDATA[com.OX.app.FieldAlreadyTakenException
at com.OX.app.Move.makeAMove(Move.java:18)
at com.OX.app.MoveTest.testIfMoveCantBeDoneIfFieldIsAlreadyWritten(MoveTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.FieldAlreadyTakenException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMoveCantBeDoneIfFieldIsAlreadyWritten -->
        <test-method signature="testIfMoveCantBeDoneIfFieldIsAlreadyWritten(int, int)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" data-provider="coordinatesToTestAlreadyTakenField" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="com.OX.app.FieldAlreadyTakenException">
            <full-stacktrace>
              <![CDATA[com.OX.app.FieldAlreadyTakenException
at com.OX.app.Move.makeAMove(Move.java:18)
at com.OX.app.MoveTest.testIfMoveCantBeDoneIfFieldIsAlreadyWritten(MoveTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.FieldAlreadyTakenException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMoveCantBeDoneIfFieldIsAlreadyWritten -->
        <test-method signature="testIfMoveIsDone()[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfMoveIsDone" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMoveIsDone -->
        <test-method signature="testIfMoveCantBeDoneIfFieldIsAlreadyWritten(int, int)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" data-provider="coordinatesToTestAlreadyTakenField" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="com.OX.app.FieldAlreadyTakenException">
            <full-stacktrace>
              <![CDATA[com.OX.app.FieldAlreadyTakenException
at com.OX.app.Move.makeAMove(Move.java:18)
at com.OX.app.MoveTest.testIfMoveCantBeDoneIfFieldIsAlreadyWritten(MoveTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.FieldAlreadyTakenException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMoveCantBeDoneIfFieldIsAlreadyWritten -->
        <test-method signature="testIfMoveCantBeDoneIfFieldIsAlreadyWritten(int, int)[pri:0, instance:com.OX.app.MoveTest@3c9d0b9d]" started-at="2019-03-21T16:55:46Z" name="testIfMoveCantBeDoneIfFieldIsAlreadyWritten" data-provider="coordinatesToTestAlreadyTakenField" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="com.OX.app.FieldAlreadyTakenException">
            <full-stacktrace>
              <![CDATA[com.OX.app.FieldAlreadyTakenException
at com.OX.app.Move.makeAMove(Move.java:18)
at com.OX.app.MoveTest.testIfMoveCantBeDoneIfFieldIsAlreadyWritten(MoveTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.FieldAlreadyTakenException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfMoveCantBeDoneIfFieldIsAlreadyWritten -->
      </class> <!-- com.OX.app.MoveTest -->
      <class name="com.OX.app.GameCompetitorsTest">
        <test-method signature="testConstructorWithList()[pri:0, instance:com.OX.app.GameCompetitorsTest@56a6d5a6]" started-at="2019-03-21T16:55:46Z" name="testConstructorWithList" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorWithList -->
        <test-method signature="testTooManyPlayersException()[pri:0, instance:com.OX.app.GameCompetitorsTest@56a6d5a6]" started-at="2019-03-21T16:55:46Z" name="testTooManyPlayersException" finished-at="2019-03-21T16:55:46Z" duration-ms="1" status="PASS">
          <exception class="com.OX.app.TooManyPlayersException">
            <full-stacktrace>
              <![CDATA[com.OX.app.TooManyPlayersException
at com.OX.app.GameCompetitors.addPlayer(GameCompetitors.java:44)
at com.OX.app.GameCompetitors.addingPlayersWithNameAndSign(GameCompetitors.java:29)
at com.OX.app.GameCompetitorsTest.testTooManyPlayersException(GameCompetitorsTest.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.TooManyPlayersException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTooManyPlayersException -->
        <test-method signature="testDefaultConstructor()[pri:0, instance:com.OX.app.GameCompetitorsTest@56a6d5a6]" started-at="2019-03-21T16:55:46Z" name="testDefaultConstructor" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultConstructor -->
        <test-method signature="testNoSuchAPlayerException()[pri:0, instance:com.OX.app.GameCompetitorsTest@56a6d5a6]" started-at="2019-03-21T16:55:46Z" name="testNoSuchAPlayerException" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <exception class="com.OX.app.NoSuchPlayerException">
            <full-stacktrace>
              <![CDATA[com.OX.app.NoSuchPlayerException
at com.OX.app.GameCompetitors.chooseStartingPlayer(GameCompetitors.java:39)
at com.OX.app.GameCompetitorsTest.testNoSuchAPlayerException(GameCompetitorsTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.OX.app.NoSuchPlayerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSuchAPlayerException -->
      </class> <!-- com.OX.app.GameCompetitorsTest -->
      <class name="com.OX.app.SignTest">
        <test-method signature="testSignEquality()[pri:0, instance:com.OX.app.SignTest@4df50bcc]" started-at="2019-03-21T16:55:46Z" name="testSignEquality" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignEquality -->
        <test-method signature="testSignNoEquality()[pri:0, instance:com.OX.app.SignTest@4df50bcc]" started-at="2019-03-21T16:55:46Z" name="testSignNoEquality" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignNoEquality -->
      </class> <!-- com.OX.app.SignTest -->
      <class name="com.OX.app.GameTest">
        <test-method signature="endToEndTestTie()[pri:0, instance:com.OX.app.GameTest@18ce0030]" started-at="2019-03-21T16:55:46Z" name="endToEndTestTie" finished-at="2019-03-21T16:55:46Z" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endToEndTestTie -->
        <test-method signature="endToEndTestWinDiagonal()[pri:0, instance:com.OX.app.GameTest@18ce0030]" started-at="2019-03-21T16:55:46Z" name="endToEndTestWinDiagonal" finished-at="2019-03-21T16:55:46Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endToEndTestWinDiagonal -->
        <test-method signature="endToEndTestWinHorizontal()[pri:0, instance:com.OX.app.GameTest@18ce0030]" started-at="2019-03-21T16:55:46Z" name="endToEndTestWinHorizontal" finished-at="2019-03-21T16:55:46Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endToEndTestWinHorizontal -->
        <test-method signature="endToEndTestWinReverseDiagonal()[pri:0, instance:com.OX.app.GameTest@18ce0030]" started-at="2019-03-21T16:55:46Z" name="endToEndTestWinReverseDiagonal" finished-at="2019-03-21T16:55:46Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endToEndTestWinReverseDiagonal -->
      </class> <!-- com.OX.app.GameTest -->
      <class name="com.OX.app.LanguageTest">
        <test-method signature="testLanguageChange()[pri:0, instance:com.OX.app.LanguageTest@309e345f]" started-at="2019-03-21T16:55:46Z" name="testLanguageChange" finished-at="2019-03-21T16:55:46Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLanguageChange -->
        <test-method signature="testLanguageChangeTwice()[pri:0, instance:com.OX.app.LanguageTest@309e345f]" started-at="2019-03-21T16:55:46Z" name="testLanguageChangeTwice" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLanguageChangeTwice -->
      </class> <!-- com.OX.app.LanguageTest -->
      <class name="com.OX.app.TieTest">
        <test-method signature="testIfItIsNotATie()[pri:0, instance:com.OX.app.TieTest@63a65a25]" started-at="2019-03-21T16:55:46Z" name="testIfItIsNotATie" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfItIsNotATie -->
        <test-method signature="testIfItIsATie()[pri:0, instance:com.OX.app.TieTest@63a65a25]" started-at="2019-03-21T16:55:46Z" name="testIfItIsATie" finished-at="2019-03-21T16:55:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfItIsATie -->
      </class> <!-- com.OX.app.TieTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
